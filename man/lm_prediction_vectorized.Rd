% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers.R
\name{lm_prediction_vectorized}
\alias{lm_prediction_vectorized}
\title{Vectorized Function for Linear Model Prediction}
\usage{
lm_prediction_vectorized(lm_model, S, X)
}
\arguments{
\item{lm_model}{A linear model object created by \code{\link{lm}}. This model
is used to generate predictions for the target variable.}

\item{S}{A numeric vector of length \eqn{n_s}, containing the S predictor
variables (independent variables) for which predictions will be made.}

\item{X}{A numeric matrix with dimensions (n, dims(X)) or data frame
containing the X predictor variables (independent variables) for which the
target variable predictions will be made.}
}
\value{
A numeric matrix of predicted values with dimensions (\eqn{n_s}, n),
  where each row corresponds to a predicted value for a respective target
  value in S and X.
}
\description{
This function performs vectorized predictions of the target variable based on
a given linear model (`lm_model`) and predictor variables. It applies the
model to a set of predictors and target values, returning the predictions in
a matrix format.
}
\details{
This function takes a linear model (`lm_model`), a predictor
variables S and X. It then generates predictions using the provided linear
model. The prediction is vectorized, meaning that it can handle multiple
predictor variables S and X efficiently.
}
\examples{
# Example:
set.seed(42)
X <- matrix(rnorm(100), ncol=2)  # Predictor variables
S <- rnorm(50)  # Predictor variables
Y <- rnorm(50) # Target variables
S_X <- data.frame(cbind(S, data.frame(X)))
colnames(S_X) <- c('S',  paste(rep('X', dim(X)[2]), 1:dim(X)[2], sep = ""))
lm_model <- lm(Y ~., data=S_X)
S_new = rnorm(100)
# Compute predicted values for the target variable
predictions <- lm_prediction_vectorized(lm_model, S_new, X)
print(dim(predictions))

}
\seealso{
\code{\link{lm}} for linear model fitting.
}
