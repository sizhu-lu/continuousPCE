% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eif_estimator_utils.R
\name{int2}
\alias{int2}
\title{Conditional Integral Calculation for Copula Models}
\usage{
int2(
  s1,
  s0,
  psp_s1,
  psp_s0,
  psp_s1_s0,
  psp_s1_cdf,
  psp_s0_cdf,
  Z,
  Tp,
  S,
  copula_type = "independent",
  rho = 0
)
}
\arguments{
\item{s1}{A numeric vector of size \eqn{n_{s1}} representing the first set of
values.}

\item{s0}{A numeric vector of size \eqn{n_{s0}} representing the second set
of values.}

\item{psp_s1}{A matrix of size (\eqn{n_{s1}}, n), representing the
probabilities associated with the first set of values s1.}

\item{psp_s0}{A matrix of size (\eqn{n_{s0}}, n), representing the
probabilities associated with the second set of values s0.}

\item{psp_s1_s0}{A numeric matrix of size (\eqn{n_{s1}}, \eqn{n_{s0}}, n)
representing joint probabilities for s1 and s0 .}

\item{psp_s1_cdf}{A matrix of size (\eqn{n_{s1}}, n) representing the
cumulative distribution function (CDF) of s1.}

\item{psp_s0_cdf}{A matrix of size (\eqn{n_{s0}}, n) representing the
cumulative distribution function (CDF) of s0.}

\item{Z}{A numeric vector of size n  representing the first condition (e.g.,
treatment assignment indicator).}

\item{Tp}{A numeric value representing the total probability for the positive
outcome (e.g., treatment or event probability).}

\item{S}{A numeric vector of size n , typically representing time or a
sequential index (used in conjunction with `Z`).}

\item{copula_type}{A character string indicating the type of copula to be
used. Defaults to "independent". Other options are "gaussian" and "fgm".}

\item{rho}{A numeric value between -1 and 1 representing the correlation
parameter for copula models. Default is 0 (for independence).}
}
\value{
A numeric array of size (\eqn{n_{s1}}, \eqn{n_{s0}}, n), representing
  the weighted and transformed probabilities of the copula model after
  applying the integral calculations.
}
\description{
This function computes a conditional integral based on a copula model,
typically used in financial or econometric models involving copula-based
dependencies.
}
\details{
The function computes the conditional integral for a copula-based
model with specified dependencies between `s1` and `s0`. It incorporates the
given probability values for both `s1` and `s0`, their CDFs, and joint
probabilities. It also applies the specified copula (independent, gaussian,
or fgm) to model dependencies between the variables. The integral is
calculated through a series of matrix operations, utilizing the copula
function, its gradient, and expansions for handling interactions between the
variables.

Specifically:
- The function calculates the copula weights (`l1_B`) and the copula gradient.
- It computes the contributions from `s1` and `s0` (`part2_s1` and `part2_s0`) based on these copula weights and gradients.
- The final result is a product of the copula probability matrix (`psp_s1_s0`) and the computed values (`lp`), accounting for both conditions `Z` and `Tp`.
}
\examples{
# Example: Compute the conditional integral with the independent copula
s1 <- rnorm(20)  # First set of values (e.g., target variable)
s0 <- rnorm(5)   # Second set of values (e.g., reference variable)
psp_s1 <- matrix(runif(200), 20, 10)  # Probability values for s1
psp_s0 <- matrix(runif(50), 5, 10)   # Probability values for s0
psp_s1_s0 <- matrix_multiply_with_expansion(psp_s1, psp_s0, 'both')  # Joint probability matrix
psp_s1_cdf <- trapz_cdf(s1, psp_s1)  # CDF of s1
psp_s0_cdf <- trapz_cdf(s0, psp_s0)  # CDF of s0
Z <- sample(0:1, 10, replace = TRUE)  # Treatment assignment indicator
Tp <- 0.7  # Event probability
S <- 1:10  # Sequential index

# Call the int2 function
result <- int2(s1, s0, psp_s1, psp_s0, psp_s1_s0, psp_s1_cdf, psp_s0_cdf, Z, Tp, S)
print(dim(result))

}
