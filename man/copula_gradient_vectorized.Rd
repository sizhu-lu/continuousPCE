% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/copula_utils.R
\name{copula_gradient_vectorized}
\alias{copula_gradient_vectorized}
\title{Vectorized Gradient of a Copula}
\usage{
copula_gradient_vectorized(U, V, copula_type = "independent", rho = 0)
}
\arguments{
\item{U}{A numeric matrix of uniform random variables representing the first
set of inputs. The values must be in the range (0, 1).}

\item{V}{A numeric matrix of uniform random variables representing the second
set of inputs. The values must be in the range (0, 1).}

\item{copula_type}{A character string specifying the copula type to use.
Possible values are:
- "independent": For the independent copula (no dependency between `U` and `V`).
- "gaussian": For the Gaussian copula.
- "fgm": For the FGM (Farlie-Gumbel-Morgenstern) copula.
Default is `'independent'`.}

\item{rho}{A numeric scalar between -1 and 1, representing the correlation
parameter for copulas that require it (i.e., Gaussian and FGM). Default is
0.}
}
\value{
A list containing two components:
\itemize{
  \item \code{cu}: A numeric array representing the gradient of the copula with respect to `U`.
  \item \code{cv}: A numeric array representing the gradient of the copula with respect to `V`.
}
  The arrays will have dimensions corresponding to the number of elements in
  `U` and `V`.
}
\description{
This function computes the gradients of a specified copula (either Gaussian
or FGM) with respect to both components `U` and `V` in a vectorized manner.
}
\details{
This function computes the gradients of different copulas
(independent, Gaussian, and FGM) in a vectorized fashion for an array of
inputs `U` and `V`.

For the independent copula, the gradients are zero as there is no dependence
between `U` and `V`. For the Gaussian and FGM copulas, the gradients are
computed using their respective formulas (via the `gaussian_copula_gradient`
and `fgm_copula_gradient` functions). The function applies bounds to ensure
that the values in `U` and `V` lie within the valid range (0, 1) before
performing the gradient calculation.
}
\examples{
# Example: Compute the gradient of the Gaussian copula with correlation 0.5
U <- matrix(runif(10), nrow = 5, ncol = 2)
V <- matrix(runif(10), nrow = 5, ncol = 2)
rho <- 0.5
gradients <- copula_gradient_vectorized(U, V, copula_type = "gaussian", rho = rho)

# Display the gradient components for the first pair of inputs
gradients$cu[1, , 1]
gradients$cv[1, , 1]

}
\seealso{
\code{\link{gaussian_copula_gradient}},
  \code{\link{fgm_copula_gradient}} for gradient calculations of individual
  copulas.
}
